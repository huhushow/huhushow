<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Huhushow's Blog</title><link href="https://huhushow.github.io/huhushow/" rel="alternate"></link><link href="https://huhushow.github.io/huhushow/feeds/dev.atom.xml" rel="self"></link><id>https://huhushow.github.io/huhushow/</id><updated>2016-10-18T22:00:00-04:00</updated><entry><title>Docker hello world</title><link href="https://huhushow.github.io/huhushow/docker-hello-world.html" rel="alternate"></link><published>2016-10-18T22:00:00-04:00</published><updated>2016-10-18T22:00:00-04:00</updated><author><name>huhushow@gmail.com</name></author><id>tag:huhushow.github.io,2016-10-18:huhushow/docker-hello-world.html</id><summary type="html">&lt;p&gt;컨테이너 소프트웨어. 리눅스 기반의 격리된 실행환경을 제공. 도커 이미지를 도커 엔진에 실행시키는 형태이다. 여기까지는 가상머신과 크게 다를것이 없다. 하지만 도커는 아래와 같은 점으로 인해 가상머신에 비해 좀 더 체계적인 관리가 가능하다.
&lt;em&gt; 계층화된 이미지 구조를 통해 변경사항 배포 시 보다 적은 트래픽 사용
&lt;/em&gt; 이미지의 버전관리 및 히스토리 관리를 기본적으로 지원
* 도커허브(이미지 저장소)를 통해 이미지를 공유하고 관리&lt;/p&gt;
&lt;p&gt;계속 작성중...&lt;/p&gt;</summary></entry><entry><title>VirtualBox 윈도우 서비스로 실행하기</title><link href="https://huhushow.github.io/huhushow/virtualbox-windou-seobiseuro-silhaenghagi.html" rel="alternate"></link><published>2016-10-18T22:00:00-04:00</published><updated>2016-10-18T22:00:00-04:00</updated><author><name>huhushow@gmail.com</name></author><id>tag:huhushow.github.io,2016-10-18:huhushow/virtualbox-windou-seobiseuro-silhaenghagi.html</id><summary type="html">&lt;p&gt;윈도우에서 개발을 위해 &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt;를 사용할 경우 부팅할때마다 VM을 수동으로 실행시키긴 귀찮기 때문에 많은 사람들이 이를 자동으로 수행해주는 스크립트 등을 사용하곤 한다. 나도 처음에는 직접 작성하였지만 &lt;a href="http://vboxvmservice.sourceforge.net/"&gt;VBoxVmService&lt;/a&gt;라는 편한 프로그램을 발견한 후에는 그냥 이녀석을 사용하고 있다.&lt;/p&gt;</summary></entry><entry><title>Bash keyboard shortcut</title><link href="https://huhushow.github.io/huhushow/bash-keyboard-shortcut.html" rel="alternate"></link><published>2016-10-18T17:00:00-04:00</published><updated>2016-10-18T17:00:00-04:00</updated><author><name>huhushow@gmail.com</name></author><id>tag:huhushow.github.io,2016-10-18:huhushow/bash-keyboard-shortcut.html</id><summary type="html">&lt;p&gt;from &lt;a href="http://www.howtogeek.com/howto/ubuntu/keyboard-shortcuts-for-bash-command-shell-for-ubuntu-debian-suse-redhat-linux-etc/"&gt;howtogeek.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ctrl + A
Go to the beginning of the line you are currently typing on&lt;/p&gt;
&lt;p&gt;Ctrl + E
Go to the End of the line you are currently typing on&lt;/p&gt;
&lt;p&gt;Ctrl + L              
CLears the Screen, similar to the clear command&lt;/p&gt;
&lt;p&gt;Ctrl + U
Clears the line before the cursor position. If you are at the end of the line, clears the entire line.&lt;/p&gt;
&lt;p&gt;Ctrl + H
Same as backspace&lt;/p&gt;
&lt;p&gt;Ctrl + R
Let’s you seaRch through previously used commands&lt;/p&gt;
&lt;p&gt;Ctrl + C
Kill whatever you are running&lt;/p&gt;
&lt;p&gt;Ctrl + D
Exit the current shell&lt;/p&gt;
&lt;p&gt;Ctrl + Z
Puts whatever you are running into a suspended background process. fg restores it.&lt;/p&gt;
&lt;p&gt;Ctrl + W
Delete the Word before the cursor&lt;/p&gt;
&lt;p&gt;Ctrl + K
Clear the line after the cursor&lt;/p&gt;
&lt;p&gt;Ctrl + T
Swap the last Two characters before the cursor&lt;/p&gt;
&lt;p&gt;Alt + F
Move cursor Forward one word on the current line&lt;/p&gt;
&lt;p&gt;Alt + B
Move cursor Backward one word on the current line&lt;/p&gt;
&lt;p&gt;Tab
Auto-complete files and folder names&lt;/p&gt;</summary></entry><entry><title>Using commend line parameter in ansible_playbook</title><link href="https://huhushow.github.io/huhushow/using-commend-line-parameter-in-ansible_playbook.html" rel="alternate"></link><published>2016-02-25T12:30:00-05:00</published><updated>2016-02-25T12:30:00-05:00</updated><author><name>huhushow@gmail.com</name></author><id>tag:huhushow.github.io,2016-02-25:huhushow/using-commend-line-parameter-in-ansible_playbook.html</id><summary type="html">&lt;p&gt;예전에 만든 ansible 배포 스크립트는 소스를 FTP로 받아오는 방식이었다. 그러다보니 버전별 배포가 복잡해져서 타겟 소스를 Git을 통해 받아오는 방식으로 바꿨다. Git clone 하는거야 ansible에 git 모듈을 이용하면 간단하다. 특정 tag등을 지정하기 위해서 커맨드라인 변수를 받아오는것도 간단한데 유용할듯 해서 남겨본다.&lt;/p&gt;
&lt;script src="https://gist.github.com/huhushow/639a417cf2b5bb33b783.js"&gt;&lt;/script&gt;

&lt;p&gt;변수의 경우 jinja2 탬플릿 문법을 사용하는데 필터를 사용해서 변수에 대한 여러 처리를 해줄 수 있다. "{{ ver | default('develop') }}" 의 경우 ver 이라는 버전에 대한 변수가 없을 경우 기본값으로 develop 브런치를 가져오록 한 것이다. 변수를 문자열로 처리했는데 이는 YAML syntax의 dictionary 표현법인 { 떄문이다. 이렇게 플레이북을 작성했다면 다음과같이 실행시킬 수 있다.&lt;/p&gt;
&lt;script src="https://gist.github.com/huhushow/b5f5d6c7445025b90a6e.js"&gt;&lt;/script&gt;

&lt;p&gt;간단한 키-값 형식 또는&amp;nbsp;JSON 형식을 사용할 수 있다. json 형식으로 저장된 파일을 읽어올수도 있는데 그럴 경우 @ 마크로 파일임을 표시한다.&lt;/p&gt;</summary></entry></feed>